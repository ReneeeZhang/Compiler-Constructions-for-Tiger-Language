%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  exp | program | exps | op | cond | lvalue | loop | decs | expseq
	| dec | tydec | fundec | vardec | ty | tyfields
  

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
        DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program : exp                                            ()

exps : exp exps                                          ()
    | exp                                                ()

decs : dec decs                                          ()
    | dec                                                ()
    |                                                    ()

dec : tydec                                              ()
    | vardec                                             ()
    | fundec                                             ()

tydec : TYPE ID EQ ty                                    ()

ty : ID                                                  ()
    | LBRACE tyfields RBRACE                             ()
    | ARRAY OF ID                                        ()

tyfields : ID COLON ID                                   ()
    | tyfields COMMA ID COLON ID                         ()

vardec : VAR ID ASSIGN exp                               ()
    | VAR ID COLON ID ASSIGN exp                         ()

fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp       ()
    | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp ()

lvalue : ID                                              ()
    | lvalue DOT ID                                      ()
    | lvalue LBRACK exp RBRACK                           ()

loop : WHILE exp DO exp                                  ()
    | FOR ID ASSIGN exp TO exp DO exp                    ()
        
exp : INT                                                ()
    | ID                                                 ()
    | lvalue ASSIGN exp                                  ()
    | lvalue                                             ()
    | cond                                               ()
    | loop                                               ()
    | exp op exp                                         ()
    | LET decs IN expseq END                             ()
    | LPAREN exp RPAREN                                  ()
    | LPAREN RPAREN                                      ()

cond : IF exp THEN exp ELSE exp                          ()
    | IF exp THEN exp                                    ()

op  : AND                                                ()
    | OR                                                 ()
    | EQ                                                 ()
    | NEQ                                                ()
    | LT                                                 ()
    | GT                                                 ()
    | LE                                                 ()
    | GE                                                 ()
    | PLUS                                               ()
    | MINUS                                              ()
    | TIMES                                              ()
    | DIVIDE                                             ()

expseq : exp SEMICOLON expseq                            ()
    | exp                                                ()
